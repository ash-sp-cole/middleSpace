{"ast":null,"code":"var _jsxFileName = \"C:\\\\middleSpace\\\\src\\\\Components\\\\TestSpring\\\\index.js\";\nimport React, { useState } from 'react';\nimport './style.css';\nimport hoomeScreen from \"../../Media/homeScreen.JPG\";\nimport { useSpring, animated as a } from \"react-spring\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport DisplayBox from '../DisplayBox';\n\nconst TestSpring = () => {\n  const [flipped, set] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(10px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => set(state => !state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(a.div, {\n    style: {\n      opacity: opacity.interpolate(o => 1 - o),\n      transform\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 83\n    }\n  }, \" click\")), /*#__PURE__*/React.createElement(a.div, {\n    style: {\n      opacity,\n      transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DisplayBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 100\n    }\n  })));\n};\n\nexport default TestSpring;","map":{"version":3,"sources":["C:/middleSpace/src/Components/TestSpring/index.js"],"names":["React","useState","hoomeScreen","useSpring","animated","a","Paper","Button","DisplayBox","TestSpring","flipped","set","transform","opacity","config","mass","tension","friction","state","interpolate","o","t"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAQ,IAAIC,CAA/B,QAAuC,cAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAI;AACnB,QAAM,CAACC,OAAD,EAAUC,GAAV,IAAiBV,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAyBV,SAAS,CAAC;AACvCU,IAAAA,OAAO,EAAEH,OAAO,GAAG,CAAH,GAAO,CADgB;AAEvCE,IAAAA,SAAS,EAAG,6BAA4BF,OAAO,GAAG,GAAH,GAAS,CAAE,MAFnB;AAGvCI,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAH+B,GAAD,CAAxC;AAKA,sBACE;AAAK,IAAA,OAAO,EAAE,MAAMN,GAAG,CAACO,KAAK,IAAI,CAACA,KAAX,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,GAAH;AAAQ,IAAA,KAAK,EAAE;AAAEL,MAAAA,OAAO,EAAEA,OAAO,CAACM,WAAR,CAAoBC,CAAC,IAAI,IAAIA,CAA7B,CAAX;AAA4CR,MAAAA;AAA5C,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1E,CADF,eAEE,oBAAC,CAAD,CAAG,GAAH;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAF;AAAWD,MAAAA,SAAS,EAAEA,SAAS,CAACO,WAAV,CAAsBE,CAAC,IAAK,GAAEA,CAAE,kBAAhC;AAAtB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2F,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3F,CAFF,CADF;AAMD,CAbH;;AAkBA,eAAeZ,UAAf","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport './style.css';\r\nimport hoomeScreen from \"../../Media/homeScreen.JPG\";\r\nimport {useSpring, animated as a} from \"react-spring\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DisplayBox from '../DisplayBox';\r\n\r\nconst TestSpring = ()=>{\r\n    const [flipped, set] = useState(false)\r\n    const { transform, opacity } = useSpring({\r\n      opacity: flipped ? 1 : 0,\r\n      transform: `perspective(10px) rotateX(${flipped ? 180 : 0}deg)`,\r\n      config: { mass: 5, tension: 500, friction: 80 }\r\n    })\r\n    return (\r\n      <div onClick={() => set(state => !state)}>\r\n        <a.div  style={{ opacity: opacity.interpolate(o => 1 - o), transform, }} ><h1> click</h1></a.div>\r\n        <a.div  style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}><DisplayBox/></a.div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n    \r\n\r\nexport default TestSpring;"]},"metadata":{},"sourceType":"module"}